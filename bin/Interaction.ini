; Copyright (C) 2017 Arc676/Alessandro Vinciguerra <alesvinciguerra@gmail.com>

; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation (version 3)

; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.

; You should have received a copy of the GNU General Public License
; along with this program.  If not, see <http:; www.gnu.org/licenses/>.
; See README and LICENSE for more details

[Input] ;=====================================
SetList             = PhysicsInput

[SoldierInput] ;==============================
KEY_LEFT             = GoLeft
KEY_RIGHT            = GoRight
KEY_UP				 = GoUp
KEY_DOWN			 = GoDown

[PhysicsInput@SoldierInput] ;=================
MOUSE_LEFT           = SpawnBox
MOUSE_RIGHT			 = DeleteBox

[BoxBody] ;===================================
PartList             = FullBoxPart
Dynamic              = true                  ; (Default False) Setting this to true causes the object to move according to the physics simulation.

[BoxGraphic] ;================================
Texture              = box.png
Pivot                = center

[DynamicBox] ;=======================================
Graphic              = BoxGraphic
Position             = (-200.0, -200.0, 0.0) ~ (200.0, -200.0, 0.0) ; The tilde (~) symbol is used to specify a value randomly chosen between the two options given.
Body                 = BoxBody
Scale                = 2.0

[FullBoxPart] ;===============================
Type                 = box                   ; This defines the bounding type of the object
Restitution          = 0.0                   ; This defines the 'bounciness' of the object
Friction             = 1.0
SelfFlags            = 0x0001                ; This is essentially the ID of the collection of physics objects.
CheckMask            = 0xFFFF                ; This defines what OTHER ID Flags this will collide with.
Solid                = true
Density              = 1.0
; TopLeft            = (0.0, 0.0, 0.0)       ; Because we don't specify these values, they will be automatically created
; BottomRight        = (1.0, 1.0, 1.0)       ;    based upon the object that references it.
